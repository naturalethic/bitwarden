import { ChangeDetectorRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';
import { FieldType } from '../../enums/fieldType';
import { AuditService } from '../../abstractions/audit.service';
import { CipherService } from '../../abstractions/cipher.service';
import { CryptoService } from '../../abstractions/crypto.service';
import { I18nService } from '../../abstractions/i18n.service';
import { PlatformUtilsService } from '../../abstractions/platformUtils.service';
import { TokenService } from '../../abstractions/token.service';
import { TotpService } from '../../abstractions/totp.service';
import { UserService } from '../../abstractions/user.service';
import { AttachmentView } from '../../models/view/attachmentView';
import { CipherView } from '../../models/view/cipherView';
import { FieldView } from '../../models/view/fieldView';
import { LoginUriView } from '../../models/view/loginUriView';
import { BroadcasterService } from '../services/broadcaster.service';
export declare class ViewComponent implements OnDestroy, OnInit {
    protected cipherService: CipherService;
    protected totpService: TotpService;
    protected tokenService: TokenService;
    protected i18nService: I18nService;
    protected cryptoService: CryptoService;
    protected platformUtilsService: PlatformUtilsService;
    protected auditService: AuditService;
    protected win: Window;
    protected broadcasterService: BroadcasterService;
    protected ngZone: NgZone;
    protected changeDetectorRef: ChangeDetectorRef;
    protected userService: UserService;
    cipherId: string;
    onEditCipher: EventEmitter<CipherView>;
    cipher: CipherView;
    showPassword: boolean;
    showCardCode: boolean;
    canAccessPremium: boolean;
    totpCode: string;
    totpCodeFormatted: string;
    totpDash: number;
    totpSec: number;
    totpLow: boolean;
    fieldType: typeof FieldType;
    checkPasswordPromise: Promise<number>;
    private totpInterval;
    constructor(cipherService: CipherService, totpService: TotpService, tokenService: TokenService, i18nService: I18nService, cryptoService: CryptoService, platformUtilsService: PlatformUtilsService, auditService: AuditService, win: Window, broadcasterService: BroadcasterService, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef, userService: UserService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    load(): Promise<void>;
    edit(): void;
    togglePassword(): void;
    toggleCardCode(): void;
    checkPassword(): Promise<void>;
    toggleFieldValue(field: FieldView): void;
    launch(uri: LoginUriView): void;
    copy(value: string, typeI18nKey: string, aType: string): void;
    downloadAttachment(attachment: AttachmentView): Promise<void>;
    private cleanUp;
    private totpUpdateCode;
    private totpTick;
}
