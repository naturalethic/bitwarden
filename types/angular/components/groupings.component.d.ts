import { EventEmitter } from '@angular/core';
import { CipherType } from '../../enums/cipherType';
import { CollectionView } from '../../models/view/collectionView';
import { FolderView } from '../../models/view/folderView';
import { TreeNode } from '../../models/domain/treeNode';
import { CollectionService } from '../../abstractions/collection.service';
import { FolderService } from '../../abstractions/folder.service';
import { StorageService } from '../../abstractions/storage.service';
import { UserService } from '../../abstractions/user.service';
export declare class GroupingsComponent {
    protected collectionService: CollectionService;
    protected folderService: FolderService;
    protected storageService: StorageService;
    protected userService: UserService;
    showFolders: boolean;
    showCollections: boolean;
    showFavorites: boolean;
    onAllClicked: EventEmitter<{}>;
    onFavoritesClicked: EventEmitter<{}>;
    onCipherTypeClicked: EventEmitter<CipherType>;
    onFolderClicked: EventEmitter<FolderView>;
    onAddFolder: EventEmitter<{}>;
    onEditFolder: EventEmitter<FolderView>;
    onCollectionClicked: EventEmitter<CollectionView>;
    folders: FolderView[];
    nestedFolders: Array<TreeNode<FolderView>>;
    collections: CollectionView[];
    nestedCollections: Array<TreeNode<CollectionView>>;
    loaded: boolean;
    cipherType: typeof CipherType;
    selectedAll: boolean;
    selectedFavorites: boolean;
    selectedType: CipherType;
    selectedFolder: boolean;
    selectedFolderId: string;
    selectedCollectionId: string;
    private collapsedGroupings;
    private collapsedGroupingsKey;
    constructor(collectionService: CollectionService, folderService: FolderService, storageService: StorageService, userService: UserService);
    load(setLoaded?: boolean): Promise<void>;
    loadCollections(organizationId?: string): Promise<void>;
    loadFolders(): Promise<void>;
    selectAll(): void;
    selectFavorites(): void;
    selectType(type: CipherType): void;
    selectFolder(folder: FolderView): void;
    addFolder(): void;
    editFolder(folder: FolderView): void;
    selectCollection(collection: CollectionView): void;
    clearSelections(): void;
    collapse(grouping: FolderView | CollectionView, idPrefix?: string): void;
    isCollapsed(grouping: FolderView | CollectionView, idPrefix?: string): boolean;
}
